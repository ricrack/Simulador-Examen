{"ast":null,"code":"var _jsxFileName = \"/Users/ricrackdev/Desktop/simulador_examen/src/components/EditarPregunta.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './EditarPregunta.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { idExamenn, idPregunta } from \"./CardPregunta\";\nimport { db, collections, getDoc, setDocs, docs } from \"../firebase\";\nimport { deleteDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditarPregunta() {\n  _s();\n\n  const [pregunta, setPregunta] = useState([]);\n  const valoresIniciales = {\n    pregunta: '',\n    opcion1: '',\n    opcion2: '',\n    opcion3: '',\n    correcta: ''\n  };\n  const [values, setValues] = useState(valoresIniciales);\n  useEffect(() => {\n    const recuperarDatos = async () => {\n      try {\n        const datosCompletos = [];\n        const querySnapshot = await getDoc(collections(db, \"Examenes\"));\n        querySnapshot.forEach(doc => {\n          if (doc.id === idExamenn) {\n            datosCompletos.push(doc.data());\n            console.log(datosCompletos);\n          }\n        });\n        var preguntaM = [];\n        var longitud = datosCompletos[0].examen.length;\n\n        for (var i = 1; i < longitud; i++) {\n          if (datosCompletos[0].examen[i].id === idPregunta) {\n            var id = datosCompletos[0].examen[i].id;\n            var pregunta = datosCompletos[0].examen[i].pregunta;\n            var opcion1 = datosCompletos[0].examen[i].opcion1;\n            var opcion2 = datosCompletos[0].examen[i].opcion2;\n            var opcion3 = datosCompletos[0].examen[i].opcion3;\n            var correcta = datosCompletos[0].examen[i].correcta;\n            preguntaM.push({\n              id,\n              pregunta,\n              opcion1,\n              opcion2,\n              opcion3,\n              correcta\n            });\n            break;\n          }\n        }\n\n        setPregunta(preguntaM);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    recuperarDatos();\n  }, [pregunta]);\n  const navigate = useNavigate();\n\n  const salir = () => {\n    navigate('/editarexamen');\n  };\n\n  const guardar = async () => {\n    try {\n      var idRecuperado = \"\";\n      const datosCompletos = [];\n      const querySnapshot = await getDoc(collections(db, \"Examenes\"));\n      querySnapshot.forEach(doc => {\n        if (doc.id === idExamenn) {\n          datosCompletos.push(doc.data());\n          console.log(datosCompletos);\n          idRecuperado = doc.id;\n        }\n      });\n\n      if (window.confirm(\"¿Está seguro que desea editar la pregunta?\")) {\n        const examen = doc(db, \"Examenes\", idExamenn);\n        await deleteDoc(examen);\n      }\n\n      var examen = [];\n      var longitud = datosCompletos[0].examen.length;\n\n      for (var x = 0; x < longitud; x++) {\n        if (x === 0) {\n          var title = datosCompletos[0].examen[0].title;\n          var usuario = datosCompletos[0].examen[0].usuario;\n          examen.push({\n            title,\n            usuario\n          });\n        } else {\n          if (datosCompletos[0].examen[x].id === idPregunta) {\n            var id = idPregunta;\n            var pregunta = values.pregunta;\n            var opcion1 = values.opcion1;\n            var opcion2 = values.opcion2;\n            var opcion3 = values.opcion3;\n            var correcta = values.correcta;\n            examen.push({\n              id,\n              pregunta,\n              opcion1,\n              opcion2,\n              opcion3,\n              correcta\n            });\n          } else {\n            id = datosCompletos[0].examen[x].id;\n            pregunta = datosCompletos[0].examen[x].pregunta;\n            opcion1 = datosCompletos[0].examen[x].opcion1;\n            opcion2 = datosCompletos[0].examen[x].opcion2;\n            opcion3 = datosCompletos[0].examen[x].opcion3;\n            correcta = datosCompletos[0].examen[x].correcta;\n            examen.push({\n              id,\n              pregunta,\n              opcion1,\n              opcion2,\n              opcion3,\n              correcta\n            });\n          }\n        }\n      }\n\n      const ref = docs(db, \"Examenes\", idRecuperado);\n      await setDocs(ref, {\n        examen\n      });\n      navigate('/editarexamen');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form-register\",\n    children: pregunta.map((element, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mt-3\",\n          children: [\"Pregunta actual: \", element.pregunta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleOnChange,\n          className: \"controls\",\n          type: \"text\",\n          name: \"pregunta\",\n          id: \"pregunta\",\n          placeholder: \"Ingresa la nueva pregunta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Opcion1 actual: \", element.opcion1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleOnChange,\n          className: \"controls\",\n          type: \"text\",\n          name: \"opcion1\",\n          id: \"1\",\n          placeholder: \"Ingresa la nueva opcion 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Opcion2 actual: \", element.opcion2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleOnChange,\n          className: \"controls\",\n          type: \"text\",\n          name: \"opcion2\",\n          id: \"2\",\n          placeholder: \"Ingresa la nueva  opcion 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Opcion3 actual: \", element.opcion3]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleOnChange,\n          className: \"controls\",\n          type: \"text\",\n          name: \"opcion3\",\n          id: \"3\",\n          placeholder: \"Ingresa la nueva opcion 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mt-2\",\n          children: [\"Respuesta correcta actual: \", element.correcta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleOnChange,\n          className: \"controls\",\n          type: \"text\",\n          name: \"correcta\",\n          id: \"correcta\",\n          placeholder: \"Ingresa la nueva respuesta correcta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: guardar,\n            className: \"botons sepa btn btn-primary\",\n            children: \"Guardar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: salir,\n            className: \"botons btn btn-primary col-md-6\",\n            children: \"Salir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditarPregunta, \"p3M2DriBH9S2aTcZ1B+z6saSqKQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EditarPregunta;\nexport default EditarPregunta;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditarPregunta\");","map":{"version":3,"sources":["/Users/ricrackdev/Desktop/simulador_examen/src/components/EditarPregunta.js"],"names":["React","useState","useEffect","useNavigate","idExamenn","idPregunta","db","collections","getDoc","setDocs","docs","deleteDoc","doc","EditarPregunta","pregunta","setPregunta","valoresIniciales","opcion1","opcion2","opcion3","correcta","values","setValues","recuperarDatos","datosCompletos","querySnapshot","forEach","id","push","data","console","log","preguntaM","longitud","examen","length","i","error","navigate","salir","guardar","idRecuperado","window","confirm","x","title","usuario","ref","handleOnChange","e","name","value","target","map","element","index"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport './EditarPregunta.css';\nimport {useNavigate} from \"react-router-dom\";\nimport {idExamenn,idPregunta} from \"./CardPregunta\";\nimport { db, collections, getDoc, setDocs, docs,} from \"../firebase\";\nimport { deleteDoc, doc } from \"firebase/firestore\";\n\nfunction EditarPregunta() {\n    \n    const [pregunta, setPregunta] = useState([])\n    const valoresIniciales = {\n        pregunta: '',\n        opcion1: '',\n        opcion2: '',\n        opcion3: '',\n        correcta: '',\n    }\n\n\n    const [values, setValues] = useState(valoresIniciales);\n\n    useEffect(() => {\n        const recuperarDatos = async() => {\n           try {\n                const datosCompletos = []\n                const querySnapshot = await getDoc(collections(db, \"Examenes\"));\n                querySnapshot.forEach((doc) =>{\n                    if (doc.id === idExamenn) {\n                        datosCompletos.push(doc.data());\n                        console.log(datosCompletos);\n                    }\n                })\n\n                var preguntaM = [];\n                var longitud = datosCompletos[0].examen.length;\n\n                for(var i=1; i<longitud; i++){\n                    if(datosCompletos[0].examen[i].id === idPregunta){\n                        var id = datosCompletos[0].examen[i].id;\n                        var pregunta = datosCompletos[0].examen[i].pregunta;\n                        var opcion1 = datosCompletos[0].examen[i].opcion1;\n                        var opcion2 = datosCompletos[0].examen[i].opcion2;\n                        var opcion3 = datosCompletos[0].examen[i].opcion3;\n                        var correcta = datosCompletos[0].examen[i].correcta;\n                        preguntaM.push({id,pregunta,opcion1,opcion2,opcion3,correcta})\n                        break;\n                    }\n                }\n\n                setPregunta(preguntaM);\n           } catch (error) {\n               console.log(error)\n           }\n        }\n        recuperarDatos();\n    },[pregunta])\n\n    const navigate = useNavigate()\n\n    const salir = () =>{\n        navigate('/editarexamen')\n    }\n\n    const guardar = async() => {\n        try {\n                var idRecuperado = \"\";\n                const datosCompletos = [];\n                const querySnapshot = await getDoc(collections(db, \"Examenes\"));\n                querySnapshot.forEach((doc) => {\n                if (doc.id === idExamenn) {\n                    datosCompletos.push(doc.data());\n                    console.log(datosCompletos);\n                    idRecuperado = doc.id;\n                }\n                });\n\n                if (window.confirm(\"¿Está seguro que desea editar la pregunta?\")) {\n                    const examen = doc(db, \"Examenes\", idExamenn);\n                    await deleteDoc(examen);\n                }\n\n                var examen = [];\n                var longitud = datosCompletos[0].examen.length;\n\n                for(var x = 0; x < longitud; x++){\n                    if(x === 0){\n                        var title = datosCompletos[0].examen[0].title;\n                        var usuario = datosCompletos[0].examen[0].usuario;\n                        examen.push({title,usuario})\n                    }else{\n                        if(datosCompletos[0].examen[x].id === idPregunta){\n                            var id = idPregunta;\n                            var pregunta = values.pregunta;\n                            var opcion1 = values.opcion1;\n                            var opcion2 = values.opcion2;\n                            var opcion3 = values.opcion3;\n                            var correcta = values.correcta;\n                            examen.push({id,pregunta,opcion1,opcion2,opcion3,correcta})\n                        }else{\n                            id = datosCompletos[0].examen[x].id;\n                            pregunta = datosCompletos[0].examen[x].pregunta;\n                            opcion1 = datosCompletos[0].examen[x].opcion1;\n                            opcion2 = datosCompletos[0].examen[x].opcion2;\n                            opcion3 = datosCompletos[0].examen[x].opcion3;\n                            correcta = datosCompletos[0].examen[x].correcta;\n                            examen.push({id,pregunta,opcion1,opcion2,opcion3,correcta})\n                        }\n                    }\n                }\n\n                const ref = docs(db, \"Examenes\", idRecuperado);\n                await setDocs(ref, {\n                examen,\n                });\n\n                navigate('/editarexamen')\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const handleOnChange = e => {\n        const {name,value} = e.target;\n        setValues({...values, [name]: value})\n    }\n\n  return (\n    <section className='form-register'>\n        {\n            pregunta.map((element, index)=>{\n                return(\n                    <div key={index} className='mt-0'>\n                        <label className='mt-3'>Pregunta actual: {element.pregunta}</label>\n                        <input onChange={handleOnChange} className='controls' type='text' name='pregunta' id='pregunta' placeholder='Ingresa la nueva pregunta' />\n                        \n                        <label >Opcion1 actual: {element.opcion1}</label>\n                        <input onChange={handleOnChange} className='controls' type='text' name='opcion1' id='1' placeholder='Ingresa la nueva opcion 1' />\n                        <label>Opcion2 actual: {element.opcion2}</label>\n                        <input onChange={handleOnChange} className='controls' type='text' name='opcion2' id='2' placeholder='Ingresa la nueva  opcion 2' />\n                        <label>Opcion3 actual: {element.opcion3}</label>\n                        <input onChange={handleOnChange} className='controls' type='text' name='opcion3' id='3' placeholder='Ingresa la nueva opcion 3' />\n\n                        \n                        <label className='mt-2'>Respuesta correcta actual: {element.correcta}</label>\n                        <input onChange={handleOnChange} className='controls' type='text' name='correcta' id='correcta' placeholder='Ingresa la nueva respuesta correcta'/>\n\n                        <div className='flex items-center'>\n                        <button onClick={guardar} className='botons sepa btn btn-primary'>Guardar</button>\n                        <button onClick={salir} className='botons btn btn-primary col-md-6'>Salir</button>\n                        </div>\n                    </div>\n                )\n            })\n        }\n  </section>\n  )\n}\n\nexport default EditarPregunta"]},"metadata":{},"sourceType":"module"}