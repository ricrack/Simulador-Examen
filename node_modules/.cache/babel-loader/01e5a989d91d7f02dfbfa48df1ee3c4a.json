{"ast":null,"code":"var _jsxFileName = \"/Users/ricrackdev/Desktop/simulador_examen/src/components/Examenes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport CardExamenDocente from \"./CardExamenDocente\";\nimport GenerarExamen from './GenerarExamen';\nimport NavBar from './NavBar';\nimport { db, collections, getDoc } from \"../firebase\";\nimport { name } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Examenes(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [lista, setLista] = useState([]);\n  useEffect(() => {\n    const obtenerExamen = async () => {\n      try {\n        const datosCompletos = [];\n        const querySnapshot = await getDoc(collections(db, 'Examenes'));\n        querySnapshot.forEach(doc => {\n          datosCompletos.push({ ...doc.data(),\n            id: doc.id\n          });\n        });\n        const examen = [];\n\n        for (var i = 0; i < datosCompletos.length; i++) {\n          var id = datosCompletos[i].id;\n          var title = datosCompletos[i].examen[0].title;\n          var usuario = datosCompletos[i].examen[0].usuario;\n\n          if (usuario === name) {\n            examen.push({\n              id,\n              title,\n              usuario\n            });\n          }\n        }\n\n        setLista(examen);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    obtenerExamen();\n  }, [lista]);\n\n  const handleSubmit = () => {\n    navigate('/generarExamen');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full items-center\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      userName: props.userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/generarExamen\",\n        element: /*#__PURE__*/_jsxDEV(GenerarExamen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-3/4 bg-teal-500\\th-3/4 m-auto mt-5 shadow rounded relative flow-root\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-2px h-9 bg-white text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-serif ml-2 text-2xl\",\n          children: \"Tus ex\\xE1menes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"float-right\",\n          onClick: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-8 w-8 text-black\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            \"stroke-width\": \"2\",\n            stroke: \"currentColor\",\n            fill: \"none\",\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\",\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"path\", {\n              stroke: \"none\",\n              d: \"M0 0h24v24H0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 195\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"12\",\n              r: \"9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 236\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"9\",\n              y1: \"12\",\n              x2: \"15\",\n              y2: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 270\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"12\",\n              y1: \"9\",\n              x2: \"12\",\n              y2: \"15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 311\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: lista.map(element => {\n          return /*#__PURE__*/_jsxDEV(CardExamenDocente, {\n            id: element.id,\n            title: element.title,\n            imageUrl: \"./examen.jpg\"\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Examenes, \"TDlMZsF7TsCkgZJl/IoopvUAv7c=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Examenes;\nexport default Examenes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Examenes\");","map":{"version":3,"sources":["/Users/ricrackdev/Desktop/simulador_examen/src/components/Examenes.js"],"names":["React","useEffect","useState","Route","Routes","useNavigate","CardExamenDocente","GenerarExamen","NavBar","db","collections","getDoc","name","Examenes","props","navigate","lista","setLista","obtenerExamen","datosCompletos","querySnapshot","forEach","doc","push","data","id","examen","i","length","title","usuario","error","console","log","handleSubmit","userName","map","element"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport { Route, Routes, useNavigate } from 'react-router-dom'\nimport CardExamenDocente from \"./CardExamenDocente\";\nimport GenerarExamen from './GenerarExamen'\nimport NavBar from './NavBar'\nimport {db, collections, getDoc} from \"../firebase\";\nimport {name} from \"../App\";\n\n\nfunction Examenes(props) {\n\n  const navigate = useNavigate();\n  const [lista, setLista] = useState([])\n\n  useEffect(() => {\n\n    const obtenerExamen = async() => {\n      try {\n        const datosCompletos = []\n        const querySnapshot = await getDoc(collections(db,'Examenes'))\n        querySnapshot.forEach((doc) =>{\n          datosCompletos.push({...doc.data(), id:doc.id})\n        })\n        \n        const examen = []\n\n        for(var i = 0; i < datosCompletos.length; i++){\n          var id = datosCompletos[i].id;\n          var title = datosCompletos[i].examen[0].title;\n          var usuario = datosCompletos[i].examen[0].usuario;\n          if(usuario === name){\n            examen.push({id,title,usuario})\n          }\n        }\n\n        setLista(examen)\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    obtenerExamen()\n  },[lista])\n\n  const handleSubmit = () => {\n    navigate('/generarExamen');\n  }\n  return (\n    <div className='w-full items-center'>\n        <NavBar userName={props.userName}></NavBar>\n        <Routes>\n          <Route path='/generarExamen' element={<GenerarExamen/>}></Route>\n\n        </Routes>\n        <div className='w-3/4 bg-teal-500\th-3/4 m-auto mt-5 shadow rounded relative flow-root'>\n          <div className='border border-2px h-9 bg-white text-center'>\n              <label className='font-serif ml-2 text-2xl'>Tus exámenes</label>\n            <button className='float-right' onClick={handleSubmit}>\n              <svg className=\"h-8 w-8 text-black\"  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">  <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>  <circle cx=\"12\" cy=\"12\" r=\"9\" />  <line x1=\"9\" y1=\"12\" x2=\"15\" y2=\"12\" />  <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"15\" /></svg>\n            </button>\n          </div>\n          <div>\n            {\n              lista.map((element) =>{\n                return (\n                  <CardExamenDocente\n                    key={element.id} \n                    id={element.id}\n                    title={element.title}\n                    imageUrl='./examen.jpg'\n                  />\n                )\n              })\n            }\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Examenes"]},"metadata":{},"sourceType":"module"}