{"ast":null,"code":"var _jsxFileName = \"/Users/ricrackdev/Desktop/simulador_examen/src/components/ResponderExamen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CardExamenes from './CardExamenes';\nimport NavBarAlumno from './NavBarAlumno';\nimport { db, collections, getDoc } from \"../firebase\";\nimport { Route, Routes } from 'react-router-dom';\nimport Preguntas from './Preguntas';\nimport ExamenResultado from './ExamenResultado';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResponderExamen(props) {\n  _s();\n\n  const [lista, setLista] = useState([]);\n  useEffect(() => {\n    const obtenerDatos = async () => {\n      try {\n        const datosCompletos = [];\n        const querySnapshot = await getDoc(collections(db, 'Examenes'));\n        querySnapshot.forEach(doc => {\n          datosCompletos.push({ ...doc.data(),\n            id: doc.id\n          });\n        });\n        const examenes = [];\n\n        for (var i = 0; i < datosCompletos.length; i++) {\n          var id = datosCompletos[i].id;\n          var title = datosCompletos[i].examen[0].title;\n          var usuario = datosCompletos[i].examen[0].usuario;\n          examenes.push({\n            id,\n            title,\n            usuario\n          });\n        }\n\n        setLista(examenes);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    obtenerDatos();\n  }, [lista]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [/*#__PURE__*/_jsxDEV(NavBarAlumno, {\n      userName: props.userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/preguntas\",\n        element: /*#__PURE__*/_jsxDEV(Preguntas, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 41\n        }, this),\n        component: Preguntas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/examenresultado\",\n        element: /*#__PURE__*/_jsxDEV(ExamenResultado, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 47\n        }, this),\n        component: ExamenResultado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-cyan-500 w-3/4 h-3/4 m-auto mt-5 shadow rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-2px h-9 bg-white text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-serif ml-2 text-2xl\",\n          children: \"Ex\\xE1menes Disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: lista.map(examen => {\n          return /*#__PURE__*/_jsxDEV(CardExamenes, {\n            id: examen.id,\n            title: examen.title,\n            imageUrl: \"./cardimage.jpg\",\n            body: examen.usuario\n          }, examen.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResponderExamen, \"HWZp3b4cypzy1HdkaP/+l2+a0Ik=\");\n\n_c = ResponderExamen;\nexport default ResponderExamen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponderExamen\");","map":{"version":3,"sources":["/Users/ricrackdev/Desktop/simulador_examen/src/components/ResponderExamen.js"],"names":["React","useState","useEffect","CardExamenes","NavBarAlumno","db","collections","getDoc","Route","Routes","Preguntas","ExamenResultado","ResponderExamen","props","lista","setLista","obtenerDatos","datosCompletos","querySnapshot","forEach","doc","push","data","id","examenes","i","length","title","examen","usuario","error","console","log","userName","map"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport CardExamenes from './CardExamenes'\nimport NavBarAlumno from './NavBarAlumno'\nimport {db, collections, getDoc} from \"../firebase\";\nimport { Route, Routes } from 'react-router-dom';\nimport Preguntas from './Preguntas';\nimport ExamenResultado from './ExamenResultado';\n \n\n\nfunction ResponderExamen(props) {\n\n  const [lista, setLista] = useState([])\n\n  useEffect(() =>{\n    const obtenerDatos = async() =>{\n      try {\n        const datosCompletos = []\n        const querySnapshot = await getDoc(collections(db,'Examenes'))\n        querySnapshot.forEach((doc)=>{\n        datosCompletos.push({...doc.data(), id:doc.id})\n        })\n        \n        const examenes = []\n        for(var i=0; i<datosCompletos.length; i++){\n        var id = datosCompletos[i].id\n        var title = datosCompletos[i].examen[0].title\n        var usuario = datosCompletos[i].examen[0].usuario\n        examenes.push({id,title,usuario})\n      }\n\n      setLista(examenes);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    obtenerDatos()\n  },[lista])\n\n\n  return (\n    <div className='w-full'>\n    <NavBarAlumno userName={props.userName}></NavBarAlumno>\n    <Routes>\n      <Route path='/preguntas' element={<Preguntas></Preguntas>} component={Preguntas}></Route>\n      <Route path='/examenresultado' element={<ExamenResultado></ExamenResultado>} component={ExamenResultado}></Route>\n    </Routes>\n    <div className='bg-cyan-500 w-3/4 h-3/4 m-auto mt-5 shadow rounded'>\n      <div className='border border-2px h-9 bg-white text-center'>\n        <label className='font-serif ml-2 text-2xl'>Ex√°menes Disponibles</label>\n      </div>\n      <div>\n      {\n        lista.map((examen) => {\n          return(\n            <CardExamenes \n            key={examen.id}\n            id={examen.id}\n            title={examen.title}\n            imageUrl='./cardimage.jpg'\n            body={examen.usuario}\n            />\n          )\n        })\n      }\n      </div>\n    </div>\n  </div> \n  )\n\n}\n\nexport default ResponderExamen"]},"metadata":{},"sourceType":"module"}